app Kalinovels {
  wasp: {
    version: "^0.15.0"
  },
  title: "Kalinovels",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

action createNovel {
  fn: import { createNovel } from "@src/actions.js",
  entities: [Novel]
}

action createChapter {
  fn: import { createChapter } from "@src/actions.js",
  entities: [Chapter, Novel]
}

query getNovels {
  fn: import { getNovels } from "@src/queries.js",
  entities: [Novel]
}

query getNovelDetails {
  fn: import { getNovelDetails } from "@src/queries.js",
  entities: [Novel, Chapter]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import HomePage from "@src/pages/Home.jsx",
  authRequired: false
}

route ProfileRoute { path: "/profile", to: ProfilePage }
page ProfilePage {
  component: import ProfilePage from "@src/pages/Profile.jsx",
  authRequired: true
}

route NovelRoute { path: "/novel/:novelId", to: NovelPage }
page NovelPage {
  component: import NovelPage from "@src/pages/Novel.jsx",
  authRequired: true
}

route MyNovelsRoute { path: "/my-novels", to: MyNovelsPage }
page MyNovelsPage {
  component: import MyNovelsPage from "@src/pages/MyNovels.jsx",
  authRequired: true
}
